--- /a/usr/lib/python2.7/dist-packages/nova/compute/api.py
+++ /b/usr/lib/python2.7/dist-packages/nova/compute/api.py
@@ -795,7 +795,7 @@ class API(base.Base):
                                          metadata, access_ip_v4, access_ip_v6,
                                          requested_networks, config_drive,
                                          auto_disk_config, reservation_id,
-                                         max_count):
+                                         max_count, preemptible):
         """Verify all the input parameters regardless of the provisioning
         strategy being performed.
         """
@@ -851,6 +851,8 @@ class API(base.Base):
                 instance_type, image_meta)
 
         system_metadata = {}
+        if preemptible:
+            system_metadata["preemptible"] = True
 
         # PCI requests come from two sources: instance flavor and
         # requested_networks. The first call in below returns an
@@ -1094,7 +1096,7 @@ class API(base.Base):
                requested_networks, config_drive,
                block_device_mapping, auto_disk_config, filter_properties,
                reservation_id=None, legacy_bdm=True, shutdown_terminate=False,
-               check_server_group_quota=False):
+               check_server_group_quota=False, preemptible=False)):
         """Verify all the input parameters regardless of the provisioning
         strategy being performed and schedule the instance(s) for
         creation.
@@ -1125,7 +1127,7 @@ class API(base.Base):
                     key_name, key_data, security_groups, availability_zone,
                     user_data, metadata, access_ip_v4, access_ip_v6,
                     requested_networks, config_drive, auto_disk_config,
-                    reservation_id, max_count)
+                    reservation_id, max_count, preemptible=preemptible)
 
         # max_net_count is the maximum number of instances requested by the
         # user adjusted for any network quota constraints, including
@@ -1486,7 +1488,7 @@ class API(base.Base):
                access_ip_v4=None, access_ip_v6=None, requested_networks=None,
                config_drive=None, auto_disk_config=None, scheduler_hints=None,
                legacy_bdm=True, shutdown_terminate=False,
-               check_server_group_quota=False):
+               check_server_group_quota=False, preemptible=False):
         """Provision instances, sending instance information to the
         scheduler.  The scheduler will determine where the instance(s)
         go and will handle creating the DB entries.
@@ -1508,6 +1510,11 @@ class API(base.Base):
                 msg = _('The requested availability zone is not available')
                 raise exception.InvalidRequest(msg)
 
+        if scheduler_hints is None:
+            scheduler_hints = {}
+        if preemptible:
+            scheduler_hints["preemptible"] = [True]
+
         filter_properties = scheduler_utils.build_filter_properties(
                 scheduler_hints, forced_host, forced_node, instance_type)
 
@@ -1525,7 +1532,8 @@ class API(base.Base):
                        filter_properties=filter_properties,
                        legacy_bdm=legacy_bdm,
                        shutdown_terminate=shutdown_terminate,
-                       check_server_group_quota=check_server_group_quota)
+                       check_server_group_quota=check_server_group_quota,
+                       preemptible=preemptible)
 
     def _check_auto_disk_config(self, instance=None, image=None,
                                 **extra_instance_updates):
--- /a/usr/lib/python2.7/dist-packages/nova/conf/scheduler.py
+++ /b/usr/lib/python2.7/dist-packages/nova/conf/scheduler.py
@@ -214,7 +214,7 @@ configuration.
 
 sched_driver_host_mgr_opt = cfg.StrOpt("scheduler_host_manager",
         default="host_manager",
-        choices=("host_manager", "ironic_host_manager"),
+        choices=("host_manager", "ironic_host_manager", "opie_host_manager"),
         help="""
 The scheduler host manager to use, which manages the in-memory picture of the
 hosts that the scheduler uses.
